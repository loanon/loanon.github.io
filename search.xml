<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[记PLSQL Developer设置oralce instantclient 进行远程连接经历]]></title>
    <url>%2F2017%2F11%2F10%2Fplsql-oracle%2F</url>
    <content type="text"><![CDATA[相关软件： PLSQL Developer 12(64bit) oracle instantclient-basic-windows.x64-12.2.0.1.0 都可以去对应的官网上下载。 按照网络上博客的教程解压 instantclient-basic-windows.x64-12.2.0.1.0.zip 并配置相应的环境变量以及PLSQL设置，发现 PLSQL Developer 没有远程数据库的配置。并且直接点击连接会提示没有正确安装 oracle 客户端。 搜索类似问题，有博客提到 instantclient12_2 需要 vs2013 运行库支持，让我想起来oracle的下载页面确实有相关提示。下载运行库进行安装，还是没有远程数据库的配置，但是直接点击连接会报oracle的连接错误。这说明现在客户端已经安装正确。应该是相关配置有问题。 重新检查环境变量配置，发现TNS_ADMIN配置错了，重新配置，指定到tnsnames.ora所在目录。测试发现只要该目录下有tnsnames.ora文件即可，不一定非要network/admin目录。但是保险起见，还是设置成network/admin目录。并在该目录下放置tnsnames.ora文件，文件中配置自己的数据库地址信息。 重新打开PLSQL，可以正常连接oracle数据库了。]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>PL SQL</tag>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小米6手机升级 MIUI9 小记]]></title>
    <url>%2F2017%2F08%2F21%2Fxiaomi6-miui9%2F</url>
    <content type="text"><![CDATA[同事买了小米6，最近小米也一直在宣传新系统 MIUI9 ，刚好看到可以下载就下载来刷机了。 刷机前还特意备份了一下数据，之前我也用过小米，刷机也一直都是这样备份系统，刷好了再恢复回来。 不过今天出问题了，同事刷完机，开机准备恢复数据，发现备份没有了，找遍了文件管理，发现所有的文件都没有了。看来是被格式化了。 上网查了一下，还真的是格式化了。原来是 跨版本刷机属于降级操作会自动清空手机里所有数据 。所有的地方都是提示要备份，但是就是没有提示要备份到手机之外，这个有点坑爹啊。 看来下次有什么刷机，重装啥的，还是要用电脑进行备份。]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>MI6</tag>
        <tag>MIUI9</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java 调用第三方 webservice 服务]]></title>
    <url>%2F2017%2F08%2F18%2Fjava-webservice%2F</url>
    <content type="text"><![CDATA[原由公司要求我们的系统要和第三方系统同步数据。跟第三方沟通之后发现对方提供的是 webservice 接口，作为没有接触过 webservice 的小白，表示有点慌。 下面是请求接口 “http://www.xxxx.com/webservice/service/baseInfo?wsdl“ 的 XML 结果。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139&lt;?xml version='1.0' encoding='UTF-8'?&gt;&lt;wsdl:definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://webservice.baseInfo.webservice.xxxx.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" name="BaseInfoWebServiceImplService" targetNamespace="http://webservice.baseInfo.webservice.xxxx.com/"&gt; &lt;wsdl:types&gt; &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://webservice.baseInfo.webservice.xxxx.com/" elementFormDefault="unqualified" targetNamespace="http://webservice.baseInfo.webservice.xxxx.com/" version="1.0"&gt; &lt;xs:element name="getOrgListByCode" type="tns:getOrgListByCode"/&gt; &lt;xs:element name="getOrgListByCodeResponse" type="tns:getOrgListByCodeResponse"/&gt; &lt;xs:element name="getOrgListByTime" type="tns:getOrgListByTime"/&gt; &lt;xs:element name="getOrgListByTimeResponse" type="tns:getOrgListByTimeResponse"/&gt; &lt;xs:element name="getUserListByTime" type="tns:getUserListByTime"/&gt; &lt;xs:element name="getUserListByTimeResponse" type="tns:getUserListByTimeResponse"/&gt; &lt;xs:complexType name="getOrgListByCode"&gt; &lt;xs:sequence&gt; &lt;xs:element minOccurs="0" name="arg0" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg1" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg2" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg3" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg4" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg5" type="xs:string"/&gt; &lt;/xs:sequence&gt; &lt;/xs:complexType&gt; &lt;xs:complexType name="getOrgListByCodeResponse"&gt; &lt;xs:sequence&gt; &lt;xs:element minOccurs="0" name="return" type="xs:string"/&gt; &lt;/xs:sequence&gt; &lt;/xs:complexType&gt; &lt;xs:complexType name="getUserListByTime"&gt; &lt;xs:sequence&gt; &lt;xs:element minOccurs="0" name="arg0" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg1" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg2" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg3" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg4" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg5" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg6" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg7" type="xs:string"/&gt; &lt;/xs:sequence&gt; &lt;/xs:complexType&gt; &lt;xs:complexType name="getUserListByTimeResponse"&gt; &lt;xs:sequence&gt; &lt;xs:element minOccurs="0" name="return" type="xs:string"/&gt; &lt;/xs:sequence&gt; &lt;/xs:complexType&gt; &lt;xs:complexType name="getOrgListByTime"&gt; &lt;xs:sequence&gt; &lt;xs:element minOccurs="0" name="arg0" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg1" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg2" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg3" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg4" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg5" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg6" type="xs:string"/&gt; &lt;xs:element minOccurs="0" name="arg7" type="xs:string"/&gt; &lt;/xs:sequence&gt; &lt;/xs:complexType&gt; &lt;xs:complexType name="getOrgListByTimeResponse"&gt; &lt;xs:sequence&gt; &lt;xs:element minOccurs="0" name="return" type="xs:string"/&gt; &lt;/xs:sequence&gt; &lt;/xs:complexType&gt; &lt;/xs:schema&gt; &lt;/wsdl:types&gt; &lt;wsdl:message name="getOrgListByTime"&gt; &lt;wsdl:part element="tns:getOrgListByTime" name="parameters"/&gt; &lt;/wsdl:message&gt; &lt;wsdl:message name="getOrgListByCodeResponse"&gt; &lt;wsdl:part element="tns:getOrgListByCodeResponse" name="parameters"/&gt; &lt;/wsdl:message&gt; &lt;wsdl:message name="getOrgListByCode"&gt; &lt;wsdl:part element="tns:getOrgListByCode" name="parameters"/&gt; &lt;/wsdl:message&gt; &lt;wsdl:message name="getUserListByTimeResponse"&gt; &lt;wsdl:part element="tns:getUserListByTimeResponse" name="parameters"/&gt; &lt;/wsdl:message&gt; &lt;wsdl:message name="getUserListByTime"&gt; &lt;wsdl:part element="tns:getUserListByTime" name="parameters"/&gt; &lt;/wsdl:message&gt; &lt;wsdl:message name="getOrgListByTimeResponse"&gt; &lt;wsdl:part element="tns:getOrgListByTimeResponse" name="parameters"/&gt; &lt;/wsdl:message&gt; &lt;wsdl:portType name="BaseInfoWebService"&gt; &lt;wsdl:operation name="getOrgListByCode"&gt; &lt;wsdl:input message="tns:getOrgListByCode" name="getOrgListByCode"/&gt; &lt;wsdl:output message="tns:getOrgListByCodeResponse" name="getOrgListByCodeResponse"/&gt; &lt;/wsdl:operation&gt; &lt;wsdl:operation name="getUserListByTime"&gt; &lt;wsdl:input message="tns:getUserListByTime" name="getUserListByTime"/&gt; &lt;wsdl:output message="tns:getUserListByTimeResponse" name="getUserListByTimeResponse"/&gt; &lt;/wsdl:operation&gt; &lt;wsdl:operation name="getOrgListByTime"&gt; &lt;wsdl:input message="tns:getOrgListByTime" name="getOrgListByTime"/&gt; &lt;wsdl:output message="tns:getOrgListByTimeResponse" name="getOrgListByTimeResponse"/&gt; &lt;/wsdl:operation&gt; &lt;/wsdl:portType&gt; &lt;wsdl:binding name="BaseInfoWebServiceImplServiceSoapBinding" type="tns:BaseInfoWebService"&gt; &lt;soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/&gt; &lt;wsdl:operation name="getOrgListByCode"&gt; &lt;soap:operation soapAction="" style="document"/&gt; &lt;wsdl:input name="getOrgListByCode"&gt; &lt;soap:body use="literal"/&gt; &lt;/wsdl:input&gt; &lt;wsdl:output name="getOrgListByCodeResponse"&gt; &lt;soap:body use="literal"/&gt; &lt;/wsdl:output&gt; &lt;/wsdl:operation&gt; &lt;wsdl:operation name="getUserListByTime"&gt; &lt;soap:operation soapAction="" style="document"/&gt; &lt;wsdl:input name="getUserListByTime"&gt; &lt;soap:body use="literal"/&gt; &lt;/wsdl:input&gt; &lt;wsdl:output name="getUserListByTimeResponse"&gt; &lt;soap:body use="literal"/&gt; &lt;/wsdl:output&gt; &lt;/wsdl:operation&gt; &lt;wsdl:operation name="getOrgListByTime"&gt; &lt;soap:operation soapAction="" style="document"/&gt; &lt;wsdl:input name="getOrgListByTime"&gt; &lt;soap:body use="literal"/&gt; &lt;/wsdl:input&gt; &lt;wsdl:output name="getOrgListByTimeResponse"&gt; &lt;soap:body use="literal"/&gt; &lt;/wsdl:output&gt; &lt;/wsdl:operation&gt; &lt;/wsdl:binding&gt; &lt;wsdl:service name="BaseInfoWebServiceImplService"&gt; &lt;wsdl:port binding="tns:BaseInfoWebServiceImplServiceSoapBinding" name="BaseInfoWebServiceImplPort"&gt; &lt;soap:address location="http://www.xxxx.com/webservice/services/baseInfo"/&gt; &lt;/wsdl:port&gt; &lt;/wsdl:service&gt;&lt;/wsdl:definitions&gt; 注：因为涉及客户的具体信息，接口以及 XML 中 location、schema 等地址是假的。 过程axis2遇到不会的东西当然是上网搜索找资料了，找了一个博客看了一下，使用 axis2 开发 webservice 客户端代码，但是当我按照博客的教程引入了依赖写好 demo 代码测试，一直报错。这个方法没成功，也没详细了解，就不赘述了。因为搜索的时候看到还有别的方式，所以还是继续找资料。 wsimport这次是用 Java 自带的 wsimport 工具分析 webservice 来生成代码，将 webservice 转化成 Java 服务来直接调用。 wsimport.exe 文件在 JDK 的 bin 目录下，可以在这个目录下直接启动命令行，输入命令 1wsimport -keep -p com.loanon.client.wsimport http://www.xxxx.com/webservice/service/baseInfo?wsdl 就会在 bin 目录下按照包名路径生成代码。 这里简单说一下 wsimport 的参数 12-keep //在生成class文件，或者jar包时，同时保留java源文件-p &lt;pkg&gt; //指定生成文件的包结构 所以上面的文件夹里面会有 .java 和 .class 两种文件。有了这些文件可以直接将 class 文件打成 jar 包作为依赖引入到项目中。也可以把 .java 源码放到项目中。我选择的是第二种。 我先写了一个单机的 demo 进行测试。其实第一次看到这些生成的代码是不知所措的，网上找到了的博客中，别人的描述和我生成的代码根本不一样，可以说没有联系。也许是 Java 版本的原因，也许是 webservice 接口差异的原因。看别人写的 main 方法中调用代码的方式在我的代码中没有办法做到。于是就点开源码挨个查看。终于有点头绪。 HttpConnection实在没办法了。按道理来说使用wsimport工具已经是最简单的方法了，而且写的demo可以运行，但是放到公司项目中就报错（Expection 报的是 XML Namespace 之类的，具体原因我没有去找，要是有类似问题知道原因 可以告知讨论一下）。 不过现在我已经对webservice有了一些了解。知道它就是一个http请求。只是需要按照指定的格式来传递数据（XML 报文）。通过webservice工具和Fiddler已经抓取了这个请求的报文，是一个xml。所以我决定自己直接通过Java的http请求发送报文来请求对于数据。这次可以成功返回数据，只是返回的数据还是xml，需要自己解析。]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>webservice</tag>
      </tags>
  </entry>
</search>
